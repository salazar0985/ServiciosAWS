# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://aa1hgvyt6ctbkp8.cu7jwhjnn29x.us-east-2.rds.amazonaws.com:3306/Servicios
spring.datasource.username = serviciosadmin
spring.datasource.password = c1XQpBD61WEUZox
#jdbc:mysql://localhost:3306/mysqltutorial?useSSL=false
#spring.datasource.url=jdbc:mysql://172.16.132.19:3306/servicios?useSSL=false
#spring.datasource.username=admin
#spring.datasource.password=admin
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
#hibernate.physical_naming_strategy = com.springaws.servicios.serviciosartifact.config.PhysicalNamingStrategyImpl

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.messages.basename=static/i18n/messages
 